[{"path":"https://ben18785.github.io/frbayes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 frbayes authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ben18785.github.io/frbayes/articles/introduction_to_frbayes.html","id":"synthetic-study","dir":"Articles","previous_headings":"","what":"Synthetic study","title":"Introduction to frbayes","text":"first show can fit functional response model synthetically generated data, parameters process known. assume data generating process stochastic Rogers-II-type model, process assumed follow chemical reaction equation form: prey→rateprey−1,\\begin{equation} \\text{prey} \\xrightarrow{\\text{rate}} \\text{prey} - 1, \\end{equation} rate reaction given : rate=⋅prey1+⋅h⋅prey,\\begin{equation} \\text{rate} = \\frac{\\cdot \\text{prey}}{1 + \\cdot h \\cdot \\text{prey}}, \\end{equation} aa capture rate hh handling time. , assume synthetic data =2a=2 h=0.1h=0.1. suppose 100 replicates performed initial prey counts : 5, 10, 20, 30, 40, generate possible observed dataset experimental setup.  now fit model data using maximum likelihood estimation. , use log_probability function. first show log-likelihood varies aa varied hh fixed true value.","code":"# experiment details experimental_setup <- data.frame(   n_prey_initial = c(5, 10, 20, 30, 40),   n_replicates = 100 )  # generate synthetic data true_parameters <- list(a=2, h=0.1) df <- simulate_study(   data=experimental_setup,   time_max = 1,   model = model_rogersII(),   parameters = true_parameters )  # plot data df %>%    ggplot(aes(x=n_prey_initial, y=n_prey_eaten)) +   geom_jitter(height = 0.3) as <- seq(1, 4, 0.1) log_likelihood <- vector(length = length(as))  for(i in seq_along(as)) {   parameters <- list(a = as[i], h = true_parameters$h)   log_likelihood[i] <- log_probability(     parameters = parameters,     data = df,     model = model_rogersII(),     n_replicates = 10000) }  # plot tibble(a=as, log_likelihood=log_likelihood) %>%    ggplot(aes(x=a, y=log_likelihood)) +   geom_line() +   geom_vline(xintercept = true_parameters$a, linetype=2)"},{"path":"https://ben18785.github.io/frbayes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://ben18785.github.io/frbayes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). frbayes: Package (One Line, Title Case). R package version 0.0.0.9000, https://ben18785.github.io/frbayes/.","code":"@Manual{,   title = {frbayes: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://ben18785.github.io/frbayes/}, }"},{"path":"https://ben18785.github.io/frbayes/index.html","id":"frbayes","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal frbayes fit functional response type models data adequately capture stochasticity.","code":""},{"path":"https://ben18785.github.io/frbayes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install released version frbayes :","code":"devtools::install_github(ben18785/frbayes)"},{"path":"https://ben18785.github.io/frbayes/reference/bythotrephes.html","id":null,"dir":"Reference","previous_headings":"","what":"Bythotrephes Functional Response Data — bythotrephes","title":"Bythotrephes Functional Response Data — bythotrephes","text":"Functional response dataset Bythotrephes spp. (water fleas) preying prey items different sizes.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/bythotrephes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bythotrephes Functional Response Data — bythotrephes","text":"","code":"bythotrephes"},{"path":"https://ben18785.github.io/frbayes/reference/bythotrephes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bythotrephes Functional Response Data — bythotrephes","text":"data frame following columns: n_prey_initial integer. initial density prey. n_prey_eaten integer. number prey eaten. n_prey_remaining integer. number prey left alive. size factor levels 'small', 'medium', 'large'. size prey items.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/bythotrephes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bythotrephes Functional Response Data — bythotrephes","text":"Daniel Barrios-O'Neill's Frair GitHub: https://github.com/dpritchard/frair","code":""},{"path":"https://ben18785.github.io/frbayes/reference/bythotrephes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bythotrephes Functional Response Data — bythotrephes","text":"Bythotrephes spp. (water fleas) preying prey items different sizes. Prey replaced experiment, total experimental time 12 hours. Provides example dataset type-III flexible exponent models.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/bythotrephes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bythotrephes Functional Response Data — bythotrephes","text":"","code":"data(bythotrephes)"},{"path":"https://ben18785.github.io/frbayes/reference/construct_empirical_pmf_log_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","title":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","text":"function constructs dataframe containing empirical probability mass function (PMF) logarithm simulation results. computes PMF using Dirichlet Process posterior mean, uniform prior possible values n_prey_remaining. resulting dataframe includes PMF logarithm possible value n_prey_remaining.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/construct_empirical_pmf_log_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","text":"","code":"construct_empirical_pmf_log_df(simulation_result, n_prey_initial, alpha)"},{"path":"https://ben18785.github.io/frbayes/reference/construct_empirical_pmf_log_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","text":"simulation_result dataframe containing simulation results column n_prey_remaining indicating number prey remaining. n_prey_initial integer representing initial number prey. defines range possible values n_prey_remaining. alpha numeric value representing hyperparameter Dirichlet Process prior. controls influence prior posterior calculation.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/construct_empirical_pmf_log_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","text":"tibble following columns: n_prey_remaining integer indicating number prey remaining. pmf empirical probability mass function value n_prey_remaining. log_prob logarithm PMF.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/construct_empirical_pmf_log_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","text":"PMF computed using Dirichlet Process posterior mean, prior measure uniform across possible values n_prey_remaining. PMF adjusted hyperparameter alpha, logarithm calculated value.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/construct_empirical_pmf_log_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Empirical PMF with Log Probabilities — construct_empirical_pmf_log_df","text":"","code":"# Example usage with hypothetical simulation results and parameters simulation_result <- tibble::tibble(n_prey_remaining = c(0, 1, 1, 2, 2, 2, 3)) n_prey_initial <- 3 alpha <- 1  # Construct the empirical PMF with log probabilities df_pmf_log <- frbayes:::construct_empirical_pmf_log_df(simulation_result, n_prey_initial, alpha) print(df_pmf_log) #> # A tibble: 4 × 3 #>   n_prey_remaining   pmf log_prob #>              <dbl> <dbl>    <dbl> #> 1                0 0.156   -1.86  #> 2                1 0.281   -1.27  #> 3                2 0.406   -0.901 #> 4                3 0.156   -1.86"},{"path":"https://ben18785.github.io/frbayes/reference/create_approx_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Approximate Counts from Simulation Results — create_approx_counts","title":"Create Approximate Counts from Simulation Results — create_approx_counts","text":"function processes dataframe simulation results count occurrences value n_prey_remaining. ensures possible values n_prey_remaining 0 n_prey_initial represented, even observed simulation. replaces missing values zero provides complete dataframe counts possible value.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_approx_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Approximate Counts from Simulation Results — create_approx_counts","text":"","code":"create_approx_counts(simulation_result, n_prey_initial)"},{"path":"https://ben18785.github.io/frbayes/reference/create_approx_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Approximate Counts from Simulation Results — create_approx_counts","text":"simulation_result dataframe containing simulation results column n_prey_remaining indicating number prey remaining. n_prey_initial integer representing initial number prey. defines range possible values n_prey_remaining.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_approx_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Approximate Counts from Simulation Results — create_approx_counts","text":"tibble two columns: n_prey_remaining integer indicating number prey remaining. n integer indicating count occurrences value n_prey_remaining. Missing values replaced zero.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_approx_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Approximate Counts from Simulation Results — create_approx_counts","text":"","code":"# Example simulation result simulation_result <- tibble::tibble(n_prey_remaining = c(0, 1, 1, 2, 2, 2, 3))  # Generate approximate counts frbayes:::create_approx_counts(simulation_result, n_prey_initial = 3) #> # A tibble: 4 × 2 #>   n_prey_remaining     n #>              <dbl> <int> #> 1                0     1 #> 2                1     2 #> 3                2     3 #> 4                3     1"},{"path":"https://ben18785.github.io/frbayes/reference/create_pmf_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Log Probability Mass Function (PMF) — create_pmf_log","title":"Create a Log Probability Mass Function (PMF) — create_pmf_log","text":"Constructs function computes logarithm probability mass function (PMF) given number prey remaining based empirical data simulations Dirichlet process prior.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_pmf_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Log Probability Mass Function (PMF) — create_pmf_log","text":"","code":"create_pmf_log(simulation_result, n_prey_initial, alpha)"},{"path":"https://ben18785.github.io/frbayes/reference/create_pmf_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Log Probability Mass Function (PMF) — create_pmf_log","text":"simulation_result dataframe containing simulation results column n_prey_remaining indicating number prey remaining. n_prey_initial integer representing initial number prey. defines range possible values n_prey_remaining. alpha numeric value representing hyperparameter Dirichlet Process prior. controls influence prior posterior calculation.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_pmf_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Log Probability Mass Function (PMF) — create_pmf_log","text":"function takes single argument, n_prey_remaining, returns logarithm PMF value. input bounds non-negative integer, function returns -Inf.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_pmf_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Log Probability Mass Function (PMF) — create_pmf_log","text":"function generates log probability mass function (PMF) first calculating empirical PMF simulation results using compute logarithm PMF specified numbers prey remaining. function handles valid invalid inputs provides appropriate outputs.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/create_pmf_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Log Probability Mass Function (PMF) — create_pmf_log","text":"","code":"# Example data frame from simulations simulation_result <- tibble::tibble(n_prey_remaining = c(0, 1, 2, 1, 0, 2)) n_prey_initial <- 2 alpha <- 1  # Create the log PMF function pmf_log_function <- frbayes:::create_pmf_log(simulation_result, n_prey_initial, alpha)  # Use the log PMF function log_prob_0 <- pmf_log_function(0) log_prob_1 <- pmf_log_function(1) log_prob_2 <- pmf_log_function(2)  # Check behavior for out-of-bounds values log_prob_neg <- pmf_log_function(-1) log_prob_out_of_bound <- pmf_log_function(3)"},{"path":"https://ben18785.github.io/frbayes/reference/log_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Log Probability of Observed Data Given a Model — log_probability","title":"Compute the Log Probability of Observed Data Given a Model — log_probability","text":"function computes log probability observing given data specified model parameters. computation based simulations prey dynamics, using Dirichlet Process prior posterior methods estimate probability mass function.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Log Probability of Observed Data Given a Model — log_probability","text":"","code":"log_probability(   parameters,   data,   model,   time_max = 1,   n_replicates = 1000,   alpha = 1 )"},{"path":"https://ben18785.github.io/frbayes/reference/log_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Log Probability of Observed Data Given a Model — log_probability","text":"parameters named list vector parameters model. data data frame tibble containing observed data. must include least following columns: n_prey_initial: integer indicating initial number prey. n_prey_remaining: integer indicating number prey remaining end observation period. model function calculates propensity prey consumption based current state parameters. time_max positive numeric value specifying maximum time simulation. Defaults 1. n_replicates positive integer specifying number replicates simulation. Defaults 1000. alpha positive numeric value representing Dirichlet Process hyperparameter. Defaults 1.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Log Probability of Observed Data Given a Model — log_probability","text":"numeric value representing total log probability observed data given model parameters.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Log Probability of Observed Data Given a Model — log_probability","text":"function first validates input arguments, including data format value constraints. computes log probability unique initial prey count dataset simulating dynamics using Dirichlet Process posterior. final log probability sum log probabilities across unique initial prey counts.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Log Probability of Observed Data Given a Model — log_probability","text":"","code":"# Example usage: parameters <- list(rate = 0.1) data <- tibble::tibble(n_prey_initial = c(10, 20, 30),                        n_prey_remaining = c(5, 10, 15)) model <- function(prey, parameters) { parameters$rate * prey } log_prob <- log_probability(parameters, data, model, time_max = 1, n_replicates = 1000, alpha = 1) print(log_prob) #> [1] -27.11776"},{"path":"https://ben18785.github.io/frbayes/reference/log_probability_single_prey_initial.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","title":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","text":"Computes log probability observing specific numbers prey remaining simulation based model, given initial number prey parameters. function uses simulated data estimate log probability state using probability mass function (PMF) aggregates probabilities list prey remaining states.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability_single_prey_initial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","text":"","code":"log_probability_single_prey_initial(   parameters,   ns_prey_remaining,   n_prey_initial,   model,   time_max,   n_replicates = 1000,   alpha = 1 )"},{"path":"https://ben18785.github.io/frbayes/reference/log_probability_single_prey_initial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","text":"parameters list vector containing parameters required model function. specific parameters depend model used. ns_prey_remaining numeric vector integers representing different states prey remaining log probability needs calculated. n_prey_initial integer specifying initial number prey. used define range possible values prey remaining. model function computes propensity rate change based number prey remaining parameters provided. model compatible simulation function. time_max numeric value representing maximum time simulation. n_replicates integer specifying number simulation runs perform. Default 1000. alpha numeric parameter Dirichlet process prior. Default 1.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability_single_prey_initial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","text":"numeric value representing total log probability observing specified states prey remaining. sum log probabilities value ns_prey_remaining.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability_single_prey_initial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","text":"function first generates simulated data using given model parameters, creates log PMF function data. calculates log probability specified number prey remaining summing log PMF values.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/log_probability_single_prey_initial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Log Probability of Multiple Prey Remaining States — log_probability_single_prey_initial","text":"","code":"# Example usage parameters <- list(rate = 0.1)  # Example parameter for a constant rate model ns_prey_remaining <- c(0, 1, 2)  # States of prey remaining n_prey_initial <- 2 model <- model_constant_rate()  # Using a constant rate model time_max <- 10  # Compute log probabilities log_prob <- frbayes:::log_probability_single_prey_initial(   parameters = parameters,   ns_prey_remaining = ns_prey_remaining,   n_prey_initial = n_prey_initial,   model = model,   time_max = time_max,   n_replicates = 1000,   alpha = 1 )"},{"path":"https://ben18785.github.io/frbayes/reference/model_constant_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Constant Rate Model for Prey-Predator Simulation — model_constant_rate","title":"Generate a Constant Rate Model for Prey-Predator Simulation — model_constant_rate","text":"function returns model function rate prey consumption constant proportional current number prey. returned function can used simulations prey-predator interactions.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_constant_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Constant Rate Model for Prey-Predator Simulation — model_constant_rate","text":"","code":"model_constant_rate()"},{"path":"https://ben18785.github.io/frbayes/reference/model_constant_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Constant Rate Model for Prey-Predator Simulation — model_constant_rate","text":"function computes propensity prey consumption based current number prey set parameters. returned function takes two arguments: prey Integer representing current number prey. parameters list containing parameters model. Must include:","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_constant_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Constant Rate Model for Prey-Predator Simulation — model_constant_rate","text":"","code":"model <- model_constant_rate() parameters <- list(rate = 0.1) model(10, parameters)  # Returns 1.0 #> [1] 1"},{"path":"https://ben18785.github.io/frbayes/reference/model_generalised_holling.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Generalized Holling Model Function for Prey-Predator Simulation — model_generalised_holling","title":"Generate a Generalized Holling Model Function for Prey-Predator Simulation — model_generalised_holling","text":"function returns model function based Generalized Holling model, describes rate prey consumption function number prey three parameters: b (maximum rate consumption), h (handling time), q (type functional response).","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_generalised_holling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Generalized Holling Model Function for Prey-Predator Simulation — model_generalised_holling","text":"","code":"model_generalised_holling()"},{"path":"https://ben18785.github.io/frbayes/reference/model_generalised_holling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Generalized Holling Model Function for Prey-Predator Simulation — model_generalised_holling","text":"function calculates propensity prey consumption based current number prey set parameters. returned function takes two arguments: prey Numeric representing current number prey. parameters list containing parameters model. Must include:","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_generalised_holling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Generalized Holling Model Function for Prey-Predator Simulation — model_generalised_holling","text":"Generalized Holling model defined : $$ \\text{rate} = \\frac{b \\cdot \\text{prey}^{(1 + q)}}{1 + b \\cdot h \\cdot \\text{prey}^{(1 + q)} }$$ b maximum rate consumption, h handling time, q modifies type functional response.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_generalised_holling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Generalized Holling Model Function for Prey-Predator Simulation — model_generalised_holling","text":"","code":"model <- model_generalised_holling() parameters <- list(b = 0.5, h = 0.2, q = 1) model(10, parameters)  # Computes the rate of prey consumption for 10 prey #> [1] 4.545455"},{"path":"https://ben18785.github.io/frbayes/reference/model_rogersII.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Rogers II Model Function for Prey-Predator Simulation — model_rogersII","title":"Generate a Rogers II Model Function for Prey-Predator Simulation — model_rogersII","text":"function returns model function based Rogers II model, rate prey consumption described functional response depends current number prey two parameters: (maximum rate consumption) h (handling time).","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_rogersII.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Rogers II Model Function for Prey-Predator Simulation — model_rogersII","text":"","code":"model_rogersII()"},{"path":"https://ben18785.github.io/frbayes/reference/model_rogersII.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Rogers II Model Function for Prey-Predator Simulation — model_rogersII","text":"function calculates propensity prey consumption based current number prey set parameters. returned function takes two arguments: prey Numeric representing current number prey. parameters list containing parameters model. Must include:","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_rogersII.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Rogers II Model Function for Prey-Predator Simulation — model_rogersII","text":"Rogers II model defined : $$ \\text{rate} = \\frac{\\cdot \\text{prey}}{1 + \\cdot h \\cdot \\text{prey}} $$ maximum rate consumption h handling time.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_rogersII.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Rogers II Model Function for Prey-Predator Simulation — model_rogersII","text":"","code":"model <- model_rogersII() parameters <- list(a = 0.2, h = 0.5) model(10, parameters)  # Computes the rate of prey consumption for 10 prey #> [1] 1"},{"path":"https://ben18785.github.io/frbayes/reference/model_typeIII.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Type III Model Function for Prey-Predator Simulation — model_typeIII","title":"Generate a Type III Model Function for Prey-Predator Simulation — model_typeIII","text":"function returns model function based Type III functional response model, rate prey consumption described quadratic function number prey two parameters: b (maximum rate consumption) h (handling time).","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_typeIII.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Type III Model Function for Prey-Predator Simulation — model_typeIII","text":"","code":"model_typeIII()"},{"path":"https://ben18785.github.io/frbayes/reference/model_typeIII.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Type III Model Function for Prey-Predator Simulation — model_typeIII","text":"function calculates propensity prey consumption based current number prey set parameters. returned function takes two arguments: prey Numeric representing current number prey. parameters list containing parameters model. Must include:","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_typeIII.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Type III Model Function for Prey-Predator Simulation — model_typeIII","text":"Type III model defined : $$ \\text{rate} = \\frac{b \\cdot \\text{prey}^2}{1 + b \\cdot h \\cdot \\text{prey}^2} $$ b maximum rate consumption h handling time.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/model_typeIII.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Type III Model Function for Prey-Predator Simulation — model_typeIII","text":"","code":"model <- model_typeIII() parameters <- list(b = 0.3, h = 0.7) model(10, parameters)  # Computes the rate of prey consumption for 10 prey #> [1] 1.363636"},{"path":"https://ben18785.github.io/frbayes/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Multiple Runs of a Prey-Predator Model — simulate","title":"Simulate Multiple Runs of a Prey-Predator Model — simulate","text":"function simulates multiple runs prey-predator model, initial conditions parameters, returns summary results.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Multiple Runs of a Prey-Predator Model — simulate","text":"","code":"simulate(n_replicates, n_prey_initial, time_max, model, parameters)"},{"path":"https://ben18785.github.io/frbayes/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Multiple Runs of a Prey-Predator Model — simulate","text":"n_replicates integer representing number replicate simulations perform. n_prey_initial integer representing initial number prey. time_max numeric value indicating maximum time simulation. model function calculates propensity given current number prey parameters. parameters list named parameters required model function.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Multiple Runs of a Prey-Predator Model — simulate","text":"tibble columns n_prey_initial, n_prey_eaten, n_prey_remaining, summarizing results simulations. row represents single simulation replicate.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Multiple Runs of a Prey-Predator Model — simulate","text":"","code":"# Define a simple linear model for the propensity model <- function(n_prey, params) {   rate <- params$rate   return(rate * n_prey) }  # Set the number of replicates, initial number of prey, maximum time, and model parameters n_replicates <- 10 n_prey_initial <- 100 time_max <- 10 parameters <- list(rate = 0.1)  # Run the simulations simulate(n_replicates, n_prey_initial, time_max, model, parameters) #> # A tibble: 10 × 4 #>    replicate_id n_prey_initial n_prey_eaten n_prey_remaining #>           <int>          <dbl>        <dbl>            <dbl> #>  1            1            100           67               33 #>  2            2            100           66               34 #>  3            3            100           57               43 #>  4            4            100           60               40 #>  5            5            100           64               36 #>  6            6            100           62               38 #>  7            7            100           62               38 #>  8            8            100           61               39 #>  9            9            100           74               26 #> 10           10            100           64               36"},{"path":"https://ben18785.github.io/frbayes/reference/simulate_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Single Run of a Prey-Predator Model — simulate_single","title":"Simulate a Single Run of a Prey-Predator Model — simulate_single","text":"function simulates single run prey-predator model specified period time, given initial conditions model parameters.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Single Run of a Prey-Predator Model — simulate_single","text":"","code":"simulate_single(n_prey_initial, time_max, model, parameters)"},{"path":"https://ben18785.github.io/frbayes/reference/simulate_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Single Run of a Prey-Predator Model — simulate_single","text":"n_prey_initial integer representing initial number prey. time_max numeric value indicating maximum time simulation. model function calculates propensity given current number prey parameters. parameters list named parameters required model function.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Single Run of a Prey-Predator Model — simulate_single","text":"number prey remaining end simulation.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","title":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","text":"function performs simulations study based varying initial prey counts. uses provided model parameters generate simulation results combines results single dataframe.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","text":"","code":"simulate_study(data, time_max, model, parameters)"},{"path":"https://ben18785.github.io/frbayes/reference/simulate_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","text":"data dataframe containing study parameters. must include following columns: prey_initial: integer indicating initial density prey. n_replicates: integer specifying number replicates prey_initial. time_max positive numeric value specifying maximum time simulation. model function representing model used simulation. parameters list parameters passed model function.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","text":"dataframe containing simulation results.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_study.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","text":"function first validates inputs ensure meet required specifications. iterates unique values initial prey density, performs simulations value, combines results single dataframe. dataframe one row per unique prey_initial value input validations fail, function stop error message.","code":""},{"path":"https://ben18785.github.io/frbayes/reference/simulate_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a Study with Multiple Prey Initial Conditions — simulate_study","text":"","code":"# Example usage (assuming appropriate model and parameters): data <- data.frame(prey_initial = c(10, 20, 30), n_replicates = c(100, 100, 100)) time_max <- 10 model <- model_constant() #> Error in model_constant(): could not find function \"model_constant\" parameters <- list(rate = 0.1) result <- simulate_study(data, time_max, model, parameters) #> Error in simulate_study(data, time_max, model, parameters): `data` must be a dataframe containing columns 'n_prey_initial' and 'n_replicates'."}]
