% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmf_construction.R
\name{create_pmf_log}
\alias{create_pmf_log}
\title{Create a Log Probability Mass Function (PMF)}
\usage{
create_pmf_log(simulation_result, n_prey_initial, alpha)
}
\arguments{
\item{simulation_result}{A dataframe containing simulation results with a column
\code{n_prey_remaining} indicating the number of prey remaining.}

\item{n_prey_initial}{An integer representing the initial number of prey. It defines
the range of possible values for \code{n_prey_remaining}.}

\item{alpha}{A numeric value representing the hyperparameter for the Dirichlet Process prior.
It controls the influence of the prior in the posterior calculation.}
}
\value{
A function that takes a single argument, \code{n_prey_remaining}, and returns the logarithm
of the PMF for that value. If the input is out of bounds or not a non-negative integer, the
function returns \code{-Inf}.
}
\description{
Constructs a function that computes the logarithm of the probability mass function (PMF)
for a given number of prey remaining based on empirical data from simulations and a Dirichlet
process prior.
}
\details{
This function generates a log probability mass function (PMF) by first calculating the
empirical PMF from simulation results and then using it to compute the logarithm of the PMF
for specified numbers of prey remaining. The function handles valid and invalid inputs and
provides appropriate outputs.
}
\examples{
# Example data frame from simulations
simulation_result <- tibble::tibble(n_prey_remaining = c(0, 1, 2, 1, 0, 2))
n_prey_initial <- 2
alpha <- 1

# Create the log PMF function
pmf_log_function <- frbayes:::create_pmf_log(simulation_result, n_prey_initial, alpha)

# Use the log PMF function
log_prob_0 <- pmf_log_function(0)
log_prob_1 <- pmf_log_function(1)
log_prob_2 <- pmf_log_function(2)

# Check behavior for out-of-bounds values
log_prob_neg <- pmf_log_function(-1)
log_prob_out_of_bound <- pmf_log_function(3)
}
