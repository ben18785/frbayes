% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{create_bootstrapped_ecdf_real_simulated}
\alias{create_bootstrapped_ecdf_real_simulated}
\title{Create Bootstrapped ECDFs for Real and Simulated Data}
\usage{
create_bootstrapped_ecdf_real_simulated(
  n_bootstraps,
  data,
  time_max,
  model,
  mle_parameters
)
}
\arguments{
\item{n_bootstraps}{An integer representing the number of bootstrap samples to generate.}

\item{data}{A data frame containing the real data with columns \code{n_prey_initial} and \code{n_prey_eaten}.}

\item{time_max}{A numeric value indicating the maximum time for the simulation.}

\item{model}{A function that calculates the propensity given the current number of prey and parameters.}

\item{mle_parameters}{A list of named parameters required by the model function.}
}
\value{
A data frame with columns \code{n_prey_eaten}, \code{ecdf_sim},
\code{ecdf_real}, \code{n_prey_initial}, and \code{bootstrap_id}, representing the ECDF values
for both real and bootstrapped simulated data.
}
\description{
This function computes empirical cumulative distribution functions (ECDFs)
for both real and bootstrapped simulated data, and combines the results into
a single data frame.
}
\details{
The function first generates bootstrapped samples of the simulated data, computes
the ECDF of the number of prey eaten for each unique value of \code{n_prey_initial}
in both the real and simulated data, and then combines the results into a single
data frame for comparison.
}
\examples{
# Example real data
experimental_setup <- data.frame(n_prey_initial = c(10, 20, 30),
n_replicates = c(100, 100, 100))
time_max <- 10
model <- model_stochastic_degradation()
parameters <- list(rate = 0.1)
data <- simulate_study(experimental_setup, time_max, model, parameters)

# Suppose this maximum likelihood estimate
mle_parameters <- list(rate = 0.1)

# Create bootstrapped ECDFs for real and simulated data
ecdfs_both <- create_bootstrapped_ecdf_real_simulated(
  n_bootstraps = 10,
  data = data,
  time_max = time_max,
  model = model,
  mle_parameters = mle_parameters
)

}
